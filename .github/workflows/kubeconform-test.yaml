name: Kubeconform Validation Workflow

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - develop
  pull_request:
    paths:
      - '**/*.yaml'
      - '**/*.yml'

permissions:
  contents: read

jobs:
  kubeconform-validation:
    name: Validate Kubernetes Manifests
    runs-on: ubuntu-latest
    outputs:
      CHECK_RESULTS: ${{ steps.validate.outputs.VALIDATION_SUMMARY }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Identify Modified Files
        id: find-files
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -E '\.ya?ml$' || echo "")
          echo "Identified YAML files:"
          echo "$CHANGED_FILES"
          echo "changed_files=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Display Modified Files
        run: echo "The following files will be validated: ${{ env.changed_files }}"

      - name: Setup Kubeconform
        uses: bmuschko/setup-kubeconform@v1
        with:
          version: v0.5.0

      - name: Perform Validation
        id: validate
        run: |
          if [ -z "${{ env.changed_files }}" ]; then
            echo "No YAML files to validate."
            VALIDATION_SUMMARY="No resources found."
            echo "VALIDATION_SUMMARY=$VALIDATION_SUMMARY" >> $GITHUB_ENV
            echo "::set-output name=VALIDATION_SUMMARY::$VALIDATION_SUMMARY"
            exit 0
          fi
          
          RESULT=$(kubeconform --schema-location default \
            --schema-location "https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json" \
            --summary ${{ env.changed_files }})

          echo "Validation Results:"
          echo "$RESULT"
          echo "VALIDATION_SUMMARY=$RESULT" >> $GITHUB_ENV
          echo "::set-output name=VALIDATION_SUMMARY::$RESULT"

      - name: Final Output
        run: echo "Validation summary: ${{ steps.validate.outputs.VALIDATION_SUMMARY }}"

  notify-slack:
    needs: kubeconform-validation
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack Channel
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: slack-notifi-train
          SLACK_COLOR: ${{ needs.kubeconform-validation.result == 'success' && 'good' || 'danger' }}
          SLACK_MESSAGE: "Kubeconform validation completed:\n${{ needs.kubeconform-validation.outputs.CHECK_RESULTS }}"
          SLACK_TITLE: "Kubeconform Validation Results"
          SLACK_USERNAME: GitHub Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

